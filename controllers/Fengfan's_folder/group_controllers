const groupModel = require('../models/group_model');






async function getUserGroups(req, res) {
    try {
        const { user_id } = req.params;
        
        if (!user_id || isNaN(user_id)) {
            return res.status(400).json({
                success: false,
                message: "Valid user ID is required"
            });
        }

        const groups = await groupModel.getUserGroups(user_id);
        
        res.status(200).json({
            success: true,
            data: groups
        });
        
    } catch (error) {
        console.error("Error fetching user groups:", error);
        res.status(500).json({
            success: false,
            message: "Error fetching user groups",
            error: process.env.NODE_ENV === "development" ? error.message : undefined
        });
    }
}


// Create new group

async function createGroup(req, res) {
    try {
        const { name, owner_id, description, is_public } = req.body;
        const newGroup = await groupModel.createGroup(name, owner_id, description, is_public);
        res.status(201).json({
            success: true,
            data: newGroup
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: "Error creating group",
            error: process.env.NODE_ENV === "development" ? error.message : undefined
        });
    }
}

// Get group details with member count
async function getGroupDetails(req, res) {
    try {
        const { group_id } = req.params;
        const group = await groupModel.getGroupDetails(group_id);
        
        if (!group) {
            return res.status(404).json({
                success: false,
                message: "Group not found"
            });
        }
        
        res.status(200).json({
            success: true,
            data: group
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: "Error fetching group details",
            error: process.env.NODE_ENV === "development" ? error.message : undefined
        });
    }
}


module.exports = {
  getUserGroups,
    createGroup,
    getGroupDetails,
    
};
